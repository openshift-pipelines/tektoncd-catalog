---
# Source: task-containers/templates/task-buildah.yaml
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: buildah
  labels:
    app.kubernetes.io/version: 0.1.1
  annotations:
    tekton.dev/categories: containers
    tekton.dev/pipelines.minVersion: 0.38.0
    tekton.dev/tags: containers
spec:
  description: |
    Buildah task builds source into a container image and
    then pushes it to a container registry.

  workspaces:
    - name: source
      optional: false
      description: |
        Container build context, like for instnace a application source code
        followed by a `Containerfile`.

  params:
    - name: IMAGE
      type: string
      description: |
        Fully qualified container image name to be built by buildah.
    - name: CONTAINERFILE_PATH
      type: string
      default: Containerfile
      description: |
        Path to the `Containerfile` (or `Dockerfile`) relative to the `source` workspace.
    - name: SUBDIRECTORY
      type: string
      default: "."
      description: |
        Relative subdirectory to the `source` Workspace for the build-context.
    - name: STORAGE_DRIVER
      type: string
      default: overlay
      description: |
        Set buildah storage driver to reflect the currrent cluster node's
        settings.
    - name: BUILD_EXTRA_ARGS
      type: string
      default: ""
      description: |
        Extra parameters passed for the build command when building images.
    - name: PUSH_EXTRA_ARGS
      type: string
      default: ""
      description: |
        Extra parameters passed for the push command when pushing images.
    - name: SKIP_PUSH
      default: "false"
      description: |
        Skip pushing the image to the container registry.
    - name: TLS_VERIFY
      type: string
      default: "true"
      description: |
        Sets the TLS verification flag, `true` is recommended.
    - name: VERBOSE
      type: string
      default: "false"
      description: |
        Turns on verbose logging, all commands executed will be printed out.

  results:
    - name: IMAGE_URL
      description: |
        Fully qualified image name.
    - name: IMAGE_DIGEST
      description: |
        Digest of the image just built.

  stepTemplate:
    env:
      
      - name: PARAMS_IMAGE
        value: "$(params.IMAGE)"
      - name: PARAMS_SUBDIRECTORY
        value: "$(params.SUBDIRECTORY)"
      - name: PARAMS_CONTAINERFILE_PATH
        value: "$(params.CONTAINERFILE_PATH)"
      - name: PARAMS_STORAGE_DRIVER
        value: "$(params.STORAGE_DRIVER)"
      - name: PARAMS_BUILD_EXTRA_ARGS
        value: "$(params.BUILD_EXTRA_ARGS)"
      - name: PARAMS_PUSH_EXTRA_ARGS
        value: "$(params.PUSH_EXTRA_ARGS)"
      - name: PARAMS_SKIP_PUSH
        value: "$(params.SKIP_PUSH)"
      - name: PARAMS_TLS_VERIFY
        value: "$(params.TLS_VERIFY)"
      - name: PARAMS_VERBOSE
        value: "$(params.VERBOSE)"
      - name: WORKSPACES_SOURCE_BOUND
        value: "$(workspaces.source.bound)"
      - name: WORKSPACES_SOURCE_PATH
        value: "$(workspaces.source.path)"
      - name: RESULTS_IMAGE_URL_PATH
        value: "$(results.IMAGE_URL.path)"
      - name: RESULTS_IMAGE_DIGEST_PATH
        value: "$(results.IMAGE_DIGEST.path)"

  steps:
    - name: load-scripts
      image: docker.io/library/bash:latest
      workingDir: /scripts
      script: |
        set -e
        printf '%s' "IyEvdXNyL2Jpbi9lbnYgYmFzaAojCiMgV3JhcHBlciBhcm91bmQgImJ1aWxkYWggYnVkIiB0byBidWlsZCBhbmQgcHVzaCBhIGNvbnRhaW5lciBpbWFnZSBiYXNlZCBvbiBhIENvbnRhaW5lcmZpbGUuCiMKCnNob3B0IC1zIGluaGVyaXRfZXJyZXhpdApzZXQgLWV1IC1vIHBpcGVmYWlsCgpzb3VyY2UgIiQoZGlybmFtZSAke0JBU0hfU09VUkNFWzBdfSkvY29tbW9uLnNoIgpzb3VyY2UgIiQoZGlybmFtZSAke0JBU0hfU09VUkNFWzBdfSkvYnVpbGRhaC1jb21tb24uc2giCgpmdW5jdGlvbiBfYnVpbGRhaCgpIHsKICAgIGJ1aWxkYWggXAogICAgICAgIC0tc3RvcmFnZS1kcml2ZXI9IiR7UEFSQU1TX1NUT1JBR0VfRFJJVkVSfSIgXAogICAgICAgIC0tdGxzLXZlcmlmeT0iJHtQQVJBTVNfVExTX1ZFUklGWX0iIFwKICAgICAgICAkeyp9Cn0KCiMKIyBQcmVwYXJlCiMKCiMgbWFraW5nIHN1cmUgdGhlIHJlcXVpcmVkIHdvcmtzcGFjZSAic291cmNlIiBpcyBib3VuZGVkLCB3aGljaCBtZWFucyBpdHMgdm9sdW1lIGlzIGN1cnJlbnRseSBtb3VudGVkCiMgYW5kIHJlYWR5IHRvIHVzZQpwaGFzZSAiSW5zcGVjdGluZyBzb3VyY2Ugd29ya3NwYWNlICcke1dPUktTUEFDRVNfU09VUkNFX1BBVEh9JyAoUFdEPScke1BXRH0nKSIKW1sgIiR7V09SS1NQQUNFU19TT1VSQ0VfQk9VTkR9IiAhPSAidHJ1ZSIgXV0gJiYKICAgIGZhaWwgIldvcmtzcGFjZSAnc291cmNlJyBpcyBub3QgYm91bmRlZCIKCnBoYXNlICJBc3NlcnRpbmcgdGhlIGNvbnRhaW5lci1maWxlICcke0NPTlRBSU5FUkZJTEVfUEFUSF9GVUxMfScgZXhpc3RzIgpbWyAhIC1mICIke0NPTlRBSU5FUkZJTEVfUEFUSF9GVUxMfSIgXV0gJiYKICAgIGZhaWwgIkNvbnRhaW5lcmZpbGUgbm90IGZvdW5kIGF0OiAnJHtDT05UQUlORVJGSUxFX1BBVEhfRlVMTH0nIgoKcGhhc2UgIkluc3BlY3RpbmcgY29udGV4dCBzdWJkaXJlY3RvcnkgJyR7UEFSQU1TX1NVQkRJUkVDVE9SWX0nIgpbWyAhIC1kICIke1BBUkFNU19TVUJESVJFQ1RPUll9IiBdXSAmJgogICAgZmFpbCAiU1VCRElSRUNUT1JZIHBhcmFtIGlzIG5vdCBmb3VuZCBhdCAnJHtQQVJBTVNfU1VCRElSRUNUT1JZfScsIG9uIHNvdXJjZSB3b3Jrc3BhY2UiCgojCiMgQnVpbGQKIwoKcGhhc2UgIkJ1aWxkaW5nICcke1BBUkFNU19JTUFHRX0nIGJhc2VkIG9uICcke0NPTlRBSU5FUkZJTEVfUEFUSF9GVUxMfSciCgpbWyAtbiAiJHtQQVJBTVNfQlVJTERfRVhUUkFfQVJHU30iIF1dICYmCiAgICBwaGFzZSAiRXh0cmEgJ2J1aWxkYWggYnVkJyBhcmd1bWVudHMgaW5mb3JtZWQ6ICcke1BBUkFNU19CVUlMRF9FWFRSQV9BUkdTfSciCgpfYnVpbGRhaCBidWQgJHtQQVJBTVNfQlVJTERfRVhUUkFfQVJHU30gXAogICAgLS1uby1jYWNoZSBcCiAgICAtLWZpbGU9IiR7Q09OVEFJTkVSRklMRV9QQVRIX0ZVTEx9IiBcCiAgICAtLXRhZz0iJHtQQVJBTVNfSU1BR0V9IiBcCiAgICAke1BBUkFNU19TVUJESVJFQ1RPUll9CgppZiBbWyAiJHtQQVJBTVNfU0tJUF9QVVNIfSIgPT0gInRydWUiIF1dOyB0aGVuCiAgICBwaGFzZSAiU2tpcHBpbmcgcHVzaGluZyAnJHtQQVJBTVNfSU1BR0V9JyB0byB0aGUgY29udGFpbmVyIHJlZ2lzdHJ5ISIKICAgIGV4aXQgMApmaQoKIwojIFB1c2gKIwoKcGhhc2UgIlB1c2hpbmcgJyR7UEFSQU1TX0lNQUdFfScgdG8gdGhlIGNvbnRhaW5lciByZWdpc3RyeSIKCltbIC1uICIke1BBUkFNU19QVVNIX0VYVFJBX0FSR1N9IiBdXSAmJgogICAgcGhhc2UgIkV4dHJhICdidWlsZGFoIGJ1ZCcgYXJndW1lbnRzIGluZm9ybWVkOiAnJHtQQVJBTVNfUFVTSF9FWFRSQV9BUkdTfSciCgojIHRlbXBvcmFyeSBmaWxlIHRvIHN0b3JlIHRoZSBpbWFnZSBkaWdlc3QsIGluZm9ybWF0aW9uIG9ubHkgb2J0YWluZWQgYWZ0ZXIgcHVzaGluZyB0aGUgaW1hZ2UgdG8gdGhlCiMgY29udGFpbmVyIHJlZ2lzdHJ5CmRlY2xhcmUgLXIgZGlnZXN0X2ZpbGU9Ii90bXAvYnVpbGRhaC1kaWdlc3QudHh0IgoKX2J1aWxkYWggcHVzaCAke1BBUkFNU19QVVNIX0VYVFJBX0FSR1N9IFwKICAgIC0tZGlnZXN0ZmlsZT0iJHtkaWdlc3RfZmlsZX0iIFwKICAgICR7UEFSQU1TX0lNQUdFfSBcCiAgICBkb2NrZXI6Ly8ke1BBUkFNU19JTUFHRX0KCiMKIyBSZXN1bHRzCiMKCnBoYXNlICJJbnNwZWN0aW5nIGRpZ2VzdCByZXBvcnQgKCcke2RpZ2VzdF9maWxlfScpIgoKW1sgISAtciAiJHtkaWdlc3RfZmlsZX0iIF1dICYmCiAgICBmYWlsICJVbmFibGUgdG8gZmluZCBkaWdlc3QtZmlsZSBhdCAnJHtkaWdlc3RfZmlsZX0nIgoKZGVjbGFyZSAtciBkaWdlc3Rfc3VtPSIkKGNhdCAke2RpZ2VzdF9maWxlfSkiCgpbWyAteiAiJHtkaWdlc3Rfc3VtfSIgXV0gJiYKICAgIGZhaWwgIkRpZ2VzdCBmaWxlICcke2RpZ2VzdF9maWxlfScgaXMgZW1wdHkhIgoKcGhhc2UgIlN1Y2Nlc3NmdWx5IGJ1aWx0IGNvbnRhaW5lciBpbWFnZSAnJHtQQVJBTVNfSU1BR0V9JyAoJyR7ZGlnZXN0X3N1bX0nKSIKZWNobyAtbiAiJHtQQVJBTVNfSU1BR0V9IiB8IHRlZSAke1JFU1VMVFNfSU1BR0VfVVJMX1BBVEh9CmVjaG8gLW4gIiR7ZGlnZXN0X3N1bX0iIHwgdGVlICR7UkVTVUxUU19JTUFHRV9ESUdFU1RfUEFUSH0K" |base64 -d >buildah-bud.sh
        printf '%s' "IyEvdXNyL2Jpbi9lbnYgYmFzaAoKZGVjbGFyZSAtcnggUEFSQU1TX0lNQUdFPSIke1BBUkFNU19JTUFHRTotfSIKZGVjbGFyZSAtcnggUEFSQU1TX1NVQkRJUkVDVE9SWT0iJHtQQVJBTVNfU1VCRElSRUNUT1JZOi19IgpkZWNsYXJlIC1yeCBQQVJBTVNfQ09OVEFJTkVSRklMRV9QQVRIPSIke1BBUkFNU19DT05UQUlORVJGSUxFX1BBVEg6LX0iCmRlY2xhcmUgLXJ4IFBBUkFNU19TVE9SQUdFX0RSSVZFUj0iJHtQQVJBTVNfU1RPUkFHRV9EUklWRVI6LX0iCmRlY2xhcmUgLXJ4IFBBUkFNU19CVUlMRF9FWFRSQV9BUkdTPSIke1BBUkFNU19CVUlMRF9FWFRSQV9BUkdTOi19IgpkZWNsYXJlIC1yeCBQQVJBTVNfUFVTSF9FWFRSQV9BUkdTPSIke1BBUkFNU19QVVNIX0VYVFJBX0FSR1M6LX0iCmRlY2xhcmUgLXJ4IFBBUkFNU19TS0lQX1BVU0g9IiR7UEFSQU1TX1NLSVBfUFVTSDotfSIKZGVjbGFyZSAtcnggUEFSQU1TX1RMU19WRVJJRlk9IiR7UEFSQU1TX1RMU19WRVJJRlk6LX0iCmRlY2xhcmUgLXJ4IFBBUkFNU19WRVJCT1NFPSIke1BBUkFNU19WRVJCT1NFOi19IgoKZGVjbGFyZSAtcnggV09SS1NQQUNFU19TT1VSQ0VfUEFUSD0iJHtXT1JLU1BBQ0VTX1NPVVJDRV9QQVRIOi19IgpkZWNsYXJlIC1yeCBXT1JLU1BBQ0VTX1NPVVJDRV9CT1VORD0iJHtXT1JLU1BBQ0VTX1NPVVJDRV9CT1VORDotfSIKCmRlY2xhcmUgLXJ4IFJFU1VMVFNfSU1BR0VfRElHRVNUX1BBVEg9IiR7UkVTVUxUU19JTUFHRV9ESUdFU1RfUEFUSDotfSIKZGVjbGFyZSAtcnggUkVTVUxUU19JTUFHRV9VUkxfUEFUSD0iJHtSRVNVTFRTX0lNQUdFX1VSTF9QQVRIOi19IgoKIwojIENvbnRhaW5lcmZpbGUKIwoKIyBleHBvc2luZyB0aGUgZnVsbCBwYXRoIHRvIHRoZSBjb250YWluZXIgZmlsZSwgd2hpY2ggYnkgZGVmYXVsdCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gdGhlIHByaW1hcnkKIyB3b3Jrc3BhY2UsIHRvIHJlY2VpdmUgYSBkaWZmZXJlbnQgY29udGFpbmVyLWZpbGUgbG9jYXRpb24KZGVjbGFyZSAtciBjb250YWluZXJmaWxlX3BhdGhfb25fd3M9IiR7V09SS1NQQUNFU19TT1VSQ0VfUEFUSH0vJHtQQVJBTVNfQ09OVEFJTkVSRklMRV9QQVRIfSIKZGVjbGFyZSAteCBDT05UQUlORVJGSUxFX1BBVEhfRlVMTD0iJHtDT05UQUlORVJGSUxFX1BBVEhfRlVMTDotJHtjb250YWluZXJmaWxlX3BhdGhfb25fd3N9fSIKCiMKIyBBc3NlcnRpbmcgRW52aXJvbm1lbnQKIwoKW1sgLXogIiR7Q09OVEFJTkVSRklMRV9QQVRIX0ZVTEx9IiBdXSAmJgogICAgZmFpbCAidW5hYmxlIHRvIGZpbmQgdGhlIENvbnRhaW5lcmZpbGUsIENPTlRBSU5FUkZJTEVfUEFUSCBtYXkgaGF2ZSBhbiBpbmNvcnJlY3QgbG9jYXRpb24iCgpleHBvcnRlZF9vcl9mYWlsIFwKICAgIFdPUktTUEFDRVNfU09VUkNFX1BBVEggXAogICAgUEFSQU1TX0lNQUdFCgojCiMgVmVyYm9zZSBPdXRwdXQKIwoKaWYgW1sgIiR7UEFSQU1TX1ZFUkJPU0V9IiA9PSAidHJ1ZSIgXV07IHRoZW4KICAgIHNldCAteApmaQo=" |base64 -d >buildah-common.sh
        printf '%s' "IyEvdXNyL2Jpbi9lbnYgYmFzaAoKIyB0ZWt0b24ncyBob21lIGRpcmVjdG9yeQpkZWNsYXJlIC1yeCBURUtUT05fSE9NRT0iJHtURUtUT05fSE9NRTotL3Rla3Rvbi9ob21lfSIKCiMKIyBGdW5jdGlvbnMKIwoKZnVuY3Rpb24gZmFpbCgpIHsKICAgIGVjaG8gIkVSUk9SOiAkeyp9IiAyPiYxCiAgICBleGl0IDEKfQoKZnVuY3Rpb24gcGhhc2UoKSB7CiAgICBlY2hvICItLS0+IFBoYXNlOiAkeyp9Li4uIgp9CgojIGFzc2VydCBsb2NhbCB2YXJpYWJsZXMgYXJlIGV4cG9yZXRlZCBvbiB0aGUgZW52aXJvbm1lbnQKZnVuY3Rpb24gZXhwb3J0ZWRfb3JfZmFpbCgpIHsKICAgIGRlY2xhcmUgLWEgX3JlcXVpcmVkX3ZhcnM9IiR7QH0iCgogICAgZm9yIHYgaW4gJHtfcmVxdWlyZWRfdmFyc1tAXX07IGRvCiAgICAgICAgW1sgLXogIiR7IXZ9IiBdXSAmJgogICAgICAgICAgICBmYWlsICInJHt2fScgZW52aXJvbm1lbnQgdmFyaWFibGUgaXMgbm90IHNldCEiCiAgICBkb25lCgogICAgcmV0dXJuIDAKfQo=" |base64 -d >common.sh
        chmod +x buildah-*.sh
      volumeMounts:
        - name: scripts-dir
          mountPath: /scripts

    - name: build
      image: registry.access.redhat.com/ubi8/buildah:latest
      workingDir: /workspace/source
      command:
        - /scripts/buildah-bud.sh
      securityContext:
        privileged: true
      volumeMounts:
        - name: scripts-dir
          mountPath: /scripts

  volumes:
    - name: scripts-dir
      emptyDir: {}
