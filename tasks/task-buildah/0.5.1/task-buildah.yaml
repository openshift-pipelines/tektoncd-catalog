---
# Source: task-containers/templates/task-buildah.yaml
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: buildah
  labels:
    app.kubernetes.io/version: 0.5.1
  annotations:
    tekton.dev/source: "https://github.com/openshift-pipelines/task-containers"
    artifacthub.io/category: integration-delivery
    artifacthub.io/maintainers: |
      - name: OpenShift Pipeline task maintainers
        email: pipelines-extcomm@redhat.com
    artifacthub.io/provider: Red Hat
    artifacthub.io/recommendations: |
      - url: https://tekton.dev/
    tekton.dev/categories: containers
    tekton.dev/pipelines.minVersion: 0.41.0
    tekton.dev/tags: containers
spec:
  description: |
    Buildah task builds source into a container image and
    then pushes it to a container registry.

  workspaces:
    - name: source
      optional: false
      description: |
        Container build context, like for instnace a application source code
        followed by a `Dockerfile`.
    - name: dockerconfig
      description: >-
        An optional workspace that allows providing a .docker/config.json file
        for Buildah to access the container registry.
        The file should be placed at the root of the Workspace with name config.json
        or .dockerconfigjson.
      optional: true
    - name: rhel-entitlement
      description: >-
        An optional workspace that allows providing the entitlement keys
        for Buildah to access subscription. The mounted workspace contains
        entitlement.pem and entitlement-key.pem.
      optional: true
      mountPath: /tmp/entitlement
  params:
    - name: IMAGE
      type: string
      description: |
        Fully qualified container image name to be built by buildah.
    - name: DOCKERFILE
      type: string
      default: ./Dockerfile
      description: |
        Path to the `Dockerfile` (or `Containerfile`) relative to the `source` workspace.
    - name: BUILD_ARGS
      type: array
      default:
        - ""
      description: |
        Dockerfile build arguments, array of key=value
    - name: CONTEXT
      type: string
      default: "."
      description: |
        Path to the directory to use as context.
    - name: STORAGE_DRIVER
      type: string
      default: vfs
      description: |
        Set buildah storage driver to reflect the currrent cluster node's
        settings.
    - name: FORMAT
      description: The format of the built container, oci or docker
      default: "oci"
    - name: BUILD_EXTRA_ARGS
      type: string
      default: ""
      description: |
        Extra parameters passed for the build command when building images.
    - name: PUSH_EXTRA_ARGS
      type: string
      default: ""
      description: |
        Extra parameters passed for the push command when pushing images.
    - name: SKIP_PUSH
      default: "false"
      description: |
        Skip pushing the image to the container registry.
    - name: TLS_VERIFY
      type: string
      default: "true"
      description: |
        Sets the TLS verification flag, `true` is recommended.
    - name: VERBOSE
      type: string
      default: "false"
      description: |
        Turns on verbose logging, all commands executed will be printed out.

  results:
    - name: IMAGE_URL
      description: |
        Fully qualified image name.
    - name: IMAGE_DIGEST
      description: |
        Digest of the image just built.

  stepTemplate:
    env:
      
      - name: PARAMS_IMAGE
        value: "$(params.IMAGE)"
      - name: PARAMS_CONTEXT
        value: "$(params.CONTEXT)"
      - name: PARAMS_DOCKERFILE
        value: "$(params.DOCKERFILE)"
      - name: PARAMS_FORMAT
        value: "$(params.FORMAT)"
      - name: PARAMS_STORAGE_DRIVER
        value: "$(params.STORAGE_DRIVER)"
      - name: PARAMS_BUILD_EXTRA_ARGS
        value: "$(params.BUILD_EXTRA_ARGS)"
      - name: PARAMS_PUSH_EXTRA_ARGS
        value: "$(params.PUSH_EXTRA_ARGS)"
      - name: PARAMS_SKIP_PUSH
        value: "$(params.SKIP_PUSH)"
      - name: PARAMS_TLS_VERIFY
        value: "$(params.TLS_VERIFY)"
      - name: PARAMS_VERBOSE
        value: "$(params.VERBOSE)"
      - name: WORKSPACES_SOURCE_BOUND
        value: "$(workspaces.source.bound)"
      - name: WORKSPACES_SOURCE_PATH
        value: "$(workspaces.source.path)"
      - name: WORKSPACES_DOCKERCONFIG_BOUND
        value: "$(workspaces.dockerconfig.bound)"
      - name: WORKSPACES_DOCKERCONFIG_PATH
        value: "$(workspaces.dockerconfig.path)"
      - name: WORKSPACES_RHEL_ENTITLEMENT_BOUND
        value: "$(workspaces.rhel-entitlement.bound)"
      - name: WORKSPACES_RHEL_ENTITLEMENT_PATH
        value: "$(workspaces.rhel-entitlement.path)"
      - name: RESULTS_IMAGE_URL_PATH
        value: "$(results.IMAGE_URL.path)"
      - name: RESULTS_IMAGE_DIGEST_PATH
        value: "$(results.IMAGE_DIGEST.path)"

  steps:
    - name: build
      image: registry.access.redhat.com/ubi8/buildah:8.10-5
      workingDir: $(workspaces.source.path)
      args:
        - $(params.BUILD_ARGS[*])
      script: |
        set -e
        printf '%s' "IyEvdXNyL2Jpbi9lbnYgYmFzaAojCiMgV3JhcHBlciBhcm91bmQgImJ1aWxkYWggYnVkIiB0byBidWlsZCBhbmQgcHVzaCBhIGNvbnRhaW5lciBpbWFnZSBiYXNlZCBvbiBhIERvY2tlcmZpbGUuCiMKCnNob3B0IC1zIGluaGVyaXRfZXJyZXhpdApzZXQgLWV1IC1vIHBpcGVmYWlsCgpzb3VyY2UgIiQoZGlybmFtZSAke0JBU0hfU09VUkNFWzBdfSkvY29tbW9uLnNoIgpzb3VyY2UgIiQoZGlybmFtZSAke0JBU0hfU09VUkNFWzBdfSkvYnVpbGRhaC1jb21tb24uc2giCgpmdW5jdGlvbiBfYnVpbGRhaCgpIHsKICAgIGV2YWwgYnVpbGRhaCBcCiAgICAgICAgLS1zdG9yYWdlLWRyaXZlcj0iJHtQQVJBTVNfU1RPUkFHRV9EUklWRVJ9IiBcCiAgICAgICAgLS10bHMtdmVyaWZ5PSIke1BBUkFNU19UTFNfVkVSSUZZfSIgXAogICAgICAgICR7Kn0KfQoKIwojIFByZXBhcmUKIwoKIyBtYWtpbmcgc3VyZSB0aGUgcmVxdWlyZWQgd29ya3NwYWNlICJzb3VyY2UiIGlzIGJvdW5kZWQsIHdoaWNoIG1lYW5zIGl0cyB2b2x1bWUgaXMgY3VycmVudGx5IG1vdW50ZWQKIyBhbmQgcmVhZHkgdG8gdXNlCnBoYXNlICJJbnNwZWN0aW5nIHNvdXJjZSB3b3Jrc3BhY2UgJyR7V09SS1NQQUNFU19TT1VSQ0VfUEFUSH0nIChQV0Q9JyR7UFdEfScpIgpbWyAiJHtXT1JLU1BBQ0VTX1NPVVJDRV9CT1VORH0iICE9ICJ0cnVlIiBdXSAmJgogICAgZmFpbCAiV29ya3NwYWNlICdzb3VyY2UnIGlzIG5vdCBib3VuZGVkIgoKcGhhc2UgIkFzc2VydGluZyB0aGUgZG9ja2VyZmlsZS9jb250YWluZXJmaWxlICcke0RPQ0tFUkZJTEVfRlVMTH0nIGV4aXN0cyIKW1sgISAtZiAiJHtET0NLRVJGSUxFX0ZVTEx9IiBdXSAmJgogICAgZmFpbCAiRG9ja2VyZmlsZSBub3QgZm91bmQgYXQ6ICcke0RPQ0tFUkZJTEVfRlVMTH0nIgoKcGhhc2UgIkluc3BlY3RpbmcgY29udGV4dCAnJHtQQVJBTVNfQ09OVEVYVH0nIgpbWyAhIC1kICIke1BBUkFNU19DT05URVhUfSIgXV0gJiYKICAgIGZhaWwgIkNPTlRFWFQgcGFyYW0gaXMgbm90IGZvdW5kIGF0ICcke1BBUkFNU19DT05URVhUfScsIG9uIHNvdXJjZSB3b3Jrc3BhY2UiCgpwaGFzZSAiQnVpbGRpbmcgYnVpbGQgYXJncyIKQlVJTERfQVJHUz0oKQpmb3IgYnVpbGRhcmcgaW4gIiRAIjsgZG8KICAgIEJVSUxEX0FSR1MrPSgiLS1idWlsZC1hcmc9JGJ1aWxkYXJnIikKZG9uZQoKIyBIYW5kbGUgb3B0aW9uYWwgZG9ja2VyY29uZmlnIHNlY3JldAppZiBbWyAiJHtXT1JLU1BBQ0VTX0RPQ0tFUkNPTkZJR19CT1VORH0iID09ICJ0cnVlIiBdXTsgdGhlbgoKICAgICMgaWYgY29uZmlnLmpzb24gZXhpc3RzIGF0IHdvcmtzcGFjZSByb290LCB3ZSB1c2UgdGhhdAogICAgaWYgdGVzdCAtZiAiJHtXT1JLU1BBQ0VTX0RPQ0tFUkNPTkZJR19QQVRIfS9jb25maWcuanNvbiI7IHRoZW4KICAgICAgICBleHBvcnQgRE9DS0VSX0NPTkZJRz0iJHtXT1JLU1BBQ0VTX0RPQ0tFUkNPTkZJR19QQVRIfSIKCiAgICAgICAgIyBlbHNlIHdlIGxvb2sgZm9yIC5kb2NrZXJjb25maWdqc29uIGF0IHRoZSByb290CiAgICBlbGlmIHRlc3QgLWYgIiR7V09SS1NQQUNFU19ET0NLRVJDT05GSUdfUEFUSH0vLmRvY2tlcmNvbmZpZ2pzb24iOyB0aGVuCiAgICAgICAgIyBlbnN1cmUgLmRvY2tlciBleGlzdCBiZWZvcmUgdGhlIGNvcHlpbmcgdGhlIGNvbnRlbnQKICAgICAgICBpZiBbICEgLWQgIiRIT01FLy5kb2NrZXIiIF07IHRoZW4KICAgICAgICAgICBta2RpciAtcCAiJEhPTUUvLmRvY2tlciIKICAgICAgICBmaQogICAgICAgIGNwICIke1dPUktTUEFDRVNfRE9DS0VSQ09ORklHX1BBVEh9Ly5kb2NrZXJjb25maWdqc29uIiAiJEhPTUUvLmRvY2tlci9jb25maWcuanNvbiIKICAgICAgICBleHBvcnQgRE9DS0VSX0NPTkZJRz0iJEhPTUUvLmRvY2tlciIKCiAgICAgICAgIyBuZWVkIHRvIGVycm9yIG91dCBpZiBuZWl0aGVyIGZpbGVzIGFyZSBwcmVzZW50CiAgICBlbHNlCiAgICAgICAgZWNobyAibmVpdGhlciAnY29uZmlnLmpzb24nIG5vciAnLmRvY2tlcmNvbmZpZ2pzb24nIGZvdW5kIGF0IHdvcmtzcGFjZSByb290IgogICAgICAgIGV4aXQgMQogICAgZmkKZmkKCkVOVElUTEVNRU5UX1ZPTFVNRT0iIgppZiBbWyAiJHtXT1JLU1BBQ0VTX1JIRUxfRU5USVRMRU1FTlRfQk9VTkR9IiA9PSAidHJ1ZSIgXV07IHRoZW4KICAgIEVOVElUTEVNRU5UX1ZPTFVNRT0iLS12b2x1bWUgJHtXT1JLU1BBQ0VTX1JIRUxfRU5USVRMRU1FTlRfUEFUSH06L2V0Yy9wa2kvZW50aXRsZW1lbnQ6cm8iCmZpCgojCiMgQnVpbGQKIwoKcGhhc2UgIkJ1aWxkaW5nICcke1BBUkFNU19JTUFHRX0nIGJhc2VkIG9uICcke0RPQ0tFUkZJTEVfRlVMTH0nIgoKW1sgLW4gIiR7UEFSQU1TX0JVSUxEX0VYVFJBX0FSR1N9IiBdXSAmJgogICAgcGhhc2UgIkV4dHJhICdidWlsZGFoIGJ1ZCcgYXJndW1lbnRzIGluZm9ybWVkOiAnJHtQQVJBTVNfQlVJTERfRVhUUkFfQVJHU30nIgoKX2J1aWxkYWggYnVkICR7UEFSQU1TX0JVSUxEX0VYVFJBX0FSR1N9IFwKICAgICRFTlRJVExFTUVOVF9WT0xVTUUgXAogICAgIiR7QlVJTERfQVJHU1tAXX0iIFwKICAgIC0tZmlsZT0iJHtET0NLRVJGSUxFX0ZVTEx9IiBcCiAgICAtLXRhZz0iJHtQQVJBTVNfSU1BR0V9IiBcCiAgICAiJHtQQVJBTVNfQ09OVEVYVH0iCgppZiBbWyAiJHtQQVJBTVNfU0tJUF9QVVNIfSIgPT0gInRydWUiIF1dOyB0aGVuCiAgICBwaGFzZSAiU2tpcHBpbmcgcHVzaGluZyAnJHtQQVJBTVNfSU1BR0V9JyB0byB0aGUgY29udGFpbmVyIHJlZ2lzdHJ5ISIKICAgIGV4aXQgMApmaQoKIwojIFB1c2gKIwoKcGhhc2UgIlB1c2hpbmcgJyR7UEFSQU1TX0lNQUdFfScgdG8gdGhlIGNvbnRhaW5lciByZWdpc3RyeSIKCltbIC1uICIke1BBUkFNU19QVVNIX0VYVFJBX0FSR1N9IiBdXSAmJgogICAgcGhhc2UgIkV4dHJhICdidWlsZGFoIGJ1ZCcgYXJndW1lbnRzIGluZm9ybWVkOiAnJHtQQVJBTVNfUFVTSF9FWFRSQV9BUkdTfSciCgojIHRlbXBvcmFyeSBmaWxlIHRvIHN0b3JlIHRoZSBpbWFnZSBkaWdlc3QsIGluZm9ybWF0aW9uIG9ubHkgb2J0YWluZWQgYWZ0ZXIgcHVzaGluZyB0aGUgaW1hZ2UgdG8gdGhlCiMgY29udGFpbmVyIHJlZ2lzdHJ5CmRlY2xhcmUgLXIgZGlnZXN0X2ZpbGU9Ii90bXAvYnVpbGRhaC1kaWdlc3QudHh0IgoKX2J1aWxkYWggcHVzaCAke1BBUkFNU19QVVNIX0VYVFJBX0FSR1N9IFwKICAgIC0tZGlnZXN0ZmlsZT0iJHtkaWdlc3RfZmlsZX0iIFwKICAgICIke1BBUkFNU19JTUFHRX0iIFwKICAgICJkb2NrZXI6Ly8ke1BBUkFNU19JTUFHRX0iCgojCiMgUmVzdWx0cwojCgpwaGFzZSAiSW5zcGVjdGluZyBkaWdlc3QgcmVwb3J0ICgnJHtkaWdlc3RfZmlsZX0nKSIKCltbICEgLXIgIiR7ZGlnZXN0X2ZpbGV9IiBdXSAmJgogICAgZmFpbCAiVW5hYmxlIHRvIGZpbmQgZGlnZXN0LWZpbGUgYXQgJyR7ZGlnZXN0X2ZpbGV9JyIKCmRlY2xhcmUgLXIgZGlnZXN0X3N1bT0iJChjYXQgJHtkaWdlc3RfZmlsZX0pIgoKW1sgLXogIiR7ZGlnZXN0X3N1bX0iIF1dICYmCiAgICBmYWlsICJEaWdlc3QgZmlsZSAnJHtkaWdlc3RfZmlsZX0nIGlzIGVtcHR5ISIKCnBoYXNlICJTdWNjZXNzZnVseSBidWlsdCBjb250YWluZXIgaW1hZ2UgJyR7UEFSQU1TX0lNQUdFfScgKCcke2RpZ2VzdF9zdW19JykiCmVjaG8gLW4gIiR7UEFSQU1TX0lNQUdFfSIgfCB0ZWUgJHtSRVNVTFRTX0lNQUdFX1VSTF9QQVRIfQplY2hvIC1uICIke2RpZ2VzdF9zdW19IiB8IHRlZSAke1JFU1VMVFNfSU1BR0VfRElHRVNUX1BBVEh9Cg==" |base64 -d >"/scripts/buildah-bud.sh"
        printf '%s' "IyEvdXNyL2Jpbi9lbnYgYmFzaAoKZGVjbGFyZSAtcnggUEFSQU1TX0lNQUdFPSIke1BBUkFNU19JTUFHRTotfSIKZGVjbGFyZSAtcnggUEFSQU1TX0RPQ0tFUkZJTEU9IiR7UEFSQU1TX0RPQ0tFUkZJTEU6LX0iCmRlY2xhcmUgLXggUEFSQU1TX0NPTlRFWFQ9IiR7UEFSQU1TX0NPTlRFWFQ6LX0iCmRlY2xhcmUgLXJ4IFBBUkFNU19TVE9SQUdFX0RSSVZFUj0iJHtQQVJBTVNfU1RPUkFHRV9EUklWRVI6LX0iCmRlY2xhcmUgLXJ4IFBBUkFNU19CVUlMRF9FWFRSQV9BUkdTPSIke1BBUkFNU19CVUlMRF9FWFRSQV9BUkdTOi19IgpkZWNsYXJlIC1yeCBQQVJBTVNfUFVTSF9FWFRSQV9BUkdTPSIke1BBUkFNU19QVVNIX0VYVFJBX0FSR1M6LX0iCmRlY2xhcmUgLXJ4IFBBUkFNU19TS0lQX1BVU0g9IiR7UEFSQU1TX1NLSVBfUFVTSDotfSIKZGVjbGFyZSAtcnggUEFSQU1TX1RMU19WRVJJRlk9IiR7UEFSQU1TX1RMU19WRVJJRlk6LX0iCmRlY2xhcmUgLXJ4IFBBUkFNU19WRVJCT1NFPSIke1BBUkFNU19WRVJCT1NFOi19IgoKZGVjbGFyZSAtcnggV09SS1NQQUNFU19TT1VSQ0VfUEFUSD0iJHtXT1JLU1BBQ0VTX1NPVVJDRV9QQVRIOi19IgpkZWNsYXJlIC1yeCBXT1JLU1BBQ0VTX1NPVVJDRV9CT1VORD0iJHtXT1JLU1BBQ0VTX1NPVVJDRV9CT1VORDotfSIKZGVjbGFyZSAtcnggV09SS1NQQUNFU19ET0NLRVJDT05GSUdfUEFUSD0iJHtXT1JLU1BBQ0VTX0RPQ0tFUkNPTkZJR19QQVRIOi19IgpkZWNsYXJlIC1yeCBXT1JLU1BBQ0VTX0RPQ0tFUkNPTkZJR19CT1VORD0iJHtXT1JLU1BBQ0VTX0RPQ0tFUkNPTkZJR19CT1VORDotfSIKZGVjbGFyZSAtcnggV09SS1NQQUNFU19SSEVMX0VOVElUTEVNRU5UX1BBVEg9IiR7V09SS1NQQUNFU19SSEVMX0VOVElUTEVNRU5UX1BBVEg6LX0iCmRlY2xhcmUgLXJ4IFdPUktTUEFDRVNfUkhFTF9FTlRJVExFTUVOVF9CT1VORD0iJHtXT1JLU1BBQ0VTX1JIRUxfRU5USVRMRU1FTlRfQk9VTkQ6LX0iCgpkZWNsYXJlIC1yeCBSRVNVTFRTX0lNQUdFX0RJR0VTVF9QQVRIPSIke1JFU1VMVFNfSU1BR0VfRElHRVNUX1BBVEg6LX0iCmRlY2xhcmUgLXJ4IFJFU1VMVFNfSU1BR0VfVVJMX1BBVEg9IiR7UkVTVUxUU19JTUFHRV9VUkxfUEFUSDotfSIKCiMKIyBEb2NrZXJmaWxlCiMKCiMgZXhwb3NpbmcgdGhlIGZ1bGwgcGF0aCB0byB0aGUgY29udGFpbmVyIGZpbGUsIHdoaWNoIGJ5IGRlZmF1bHQgc2hvdWxkIGJlIHJlbGF0aXZlIHRvIHRoZSBwcmltYXJ5CiMgd29ya3NwYWNlLCB0byByZWNlaXZlIGEgZGlmZmVyZW50IGNvbnRhaW5lci1maWxlIGxvY2F0aW9uCgojIEFkZHJlc3NlcyB0aGUgaXNzdWUgb2YgaWdub3JpbmcgY29udGV4dCB2YWx1ZXMgd2hlbiB0aGV5IGFyZSBwcm92aWRlZCB3aGVyZSBgLmAgaXMgYSBkZWZhdWx0IHZhbHVlCmlmIFsgLW4gIiRQQVJBTVNfQ09OVEVYVCIgXSAmJiBbICIkUEFSQU1TX0NPTlRFWFQiICE9ICIuIiBdOyB0aGVuCiAgZGVjbGFyZSAtciBkb2NrZXJmaWxlX29uX3dzPSIke1dPUktTUEFDRVNfU09VUkNFX1BBVEh9LyR7UEFSQU1TX0NPTlRFWFR9LyR7UEFSQU1TX0RPQ0tFUkZJTEV9IgplbHNlCiAgZGVjbGFyZSAtciBkb2NrZXJmaWxlX29uX3dzPSIke1dPUktTUEFDRVNfU09VUkNFX1BBVEh9LyR7UEFSQU1TX0RPQ0tFUkZJTEV9IgpmaQpkZWNsYXJlIC14IERPQ0tFUkZJTEVfRlVMTD0iJHtET0NLRVJGSUxFX0ZVTEw6LSR7ZG9ja2VyZmlsZV9vbl93c319IgojCiMgQXNzZXJ0aW5nIEVudmlyb25tZW50CiMKCltbIC16ICIke0RPQ0tFUkZJTEVfRlVMTH0iIF1dICYmCiAgICBmYWlsICJ1bmFibGUgdG8gZmluZCB0aGUgRG9ja2VyZmlsZSwgRE9DS0VSRklMRSBtYXkgaGF2ZSBhbiBpbmNvcnJlY3QgbG9jYXRpb24iCgpleHBvcnRlZF9vcl9mYWlsIFwKICAgIFdPUktTUEFDRVNfU09VUkNFX1BBVEggXAogICAgUEFSQU1TX0lNQUdFCgojCiMgVmVyYm9zZSBPdXRwdXQKIwoKaWYgW1sgIiR7UEFSQU1TX1ZFUkJPU0V9IiA9PSAidHJ1ZSIgXV07IHRoZW4KICAgIHNldCAteApmaQo=" |base64 -d >"/scripts/buildah-common.sh"
        printf '%s' "IyEvdXNyL2Jpbi9lbnYgYmFzaAoKIyB0ZWt0b24ncyBob21lIGRpcmVjdG9yeQpkZWNsYXJlIC1yeCBURUtUT05fSE9NRT0iJHtURUtUT05fSE9NRTotL3Rla3Rvbi9ob21lfSIKCiMKIyBGdW5jdGlvbnMKIwoKZnVuY3Rpb24gZmFpbCgpIHsKICAgIGVjaG8gIkVSUk9SOiAkeyp9IiAyPiYxCiAgICBleGl0IDEKfQoKZnVuY3Rpb24gcGhhc2UoKSB7CiAgICBlY2hvICItLS0+IFBoYXNlOiAkeyp9Li4uIgp9CgojIGFzc2VydCBsb2NhbCB2YXJpYWJsZXMgYXJlIGV4cG9ydGVkIG9uIHRoZSBlbnZpcm9ubWVudApmdW5jdGlvbiBleHBvcnRlZF9vcl9mYWlsKCkgewogICAgZGVjbGFyZSAtYSBfcmVxdWlyZWRfdmFycz0iJHtAfSIKCiAgICBmb3IgdiBpbiAke19yZXF1aXJlZF92YXJzW0BdfTsgZG8KICAgICAgICBbWyAteiAiJHshdn0iIF1dICYmCiAgICAgICAgICAgIGZhaWwgIicke3Z9JyBlbnZpcm9ubWVudCB2YXJpYWJsZSBpcyBub3Qgc2V0ISIKICAgIGRvbmUKCiAgICByZXR1cm4gMAp9Cg==" |base64 -d >"/scripts/common.sh"
        ls /scripts/buildah-*.sh;
        chmod +x /scripts/buildah-*.sh;echo "Running Script /scripts/buildah-bud.sh";
          /scripts/buildah-bud.sh;
      securityContext:
        capabilities:
          add: ["SETFCAP"]
      volumeMounts:
        - name: scripts-dir
          mountPath: /scripts

  volumes:
    - name: scripts-dir
      emptyDir: {}
