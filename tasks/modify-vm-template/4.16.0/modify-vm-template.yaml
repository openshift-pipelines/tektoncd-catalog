---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  annotations:
    tekton.dev/source: "https://github.com/openshift-virtualization/openshift-virtualization-pipelines-tasks"
    tekton.dev/deprecated: "true"
    tekton.dev/pipelines.minVersion: "0.43.0"
    tekton.dev/categories: Automation
    tekton.dev/tags: kubevirt
    tekton.dev/displayName: "OpenShift Virtualization modify VM template"
    tekton.dev/platforms: "linux/amd64"
    artifacthub.io/maintainers: |
      - name: KubeVirt Tekton tasks maintainers
        email: kubevirt-tekton-tasks@redhat.com
    artifacthub.io/provider: Red Hat
    artifacthub.io/recommendations: |
      - url: https://kubevirt.io/
    artifacthub.io/category: integration-delivery
  labels:
    app.kubernetes.io/version: v4.16.0
  name: modify-vm-template
spec:
  description: >-
    Automates the modifying of OpenShift template with KubeVirt virtual machine. 
    This task is working only with https://github.com/kubevirt/common-templates. 
    Other templates will not work.
  params:
    - name: templateName
      description: Name of an OpenShift template.
      type: string
    - name: templateNamespace
      description: Namespace of an source OpenShift template. (defaults to active namespace)
      type: string
      default: ""
    - name: cpuSockets
      description: Number of CPU sockets
      type: string
      default: "0"
    - name: cpuCores
      description: Number of CPU cores
      type: string
      default: "0"
    - name: cpuThreads
      description: Number of CPU threads
      type: string
      default: "0"
    - name: memory
      description: Number of memory vm can use
      type: string
      default: ""
    - description: Template labels. If template contains same label, it will be replaced. Each param should have KEY:VAL format. Eg ["key:value", "key:value"].
      name: templateLabels
      type: array
      default: []
    - description: Template Annotations. If template contains same annotation, it will be replaced. Each param should have KEY:VAL format. Eg ["key:value", "key:value"]
      name: templateAnnotations
      type: array
      default: []
    - description: VM labels. If VM contains same label, it will be replaced. Each param should have KEY:VAL format. Eg ["key:value", "key:value"].
      name: vmLabels
      type: array
      default: []
    - description: VM annotations. If VM contains same annotation, it will be replaced. Each param should have KEY:VAL format. Eg ["key:value", "key:value"].
      name: vmAnnotations
      type: array
      default: []
    - description: 'VM disks in json format, replace vm disk if same name, otherwise new disk is appended. Eg [{"name": "test", "cdrom": {"bus": "sata"}}, {"name": "disk2"}]'
      name: disks
      type: array
      default: []
    - name: deleteDisks
      description: Set to "true" or "false" if task should delete VM disks. New disks (from disks parameter) are applied, after old disks are deleted.
      default: 'false'
      type: string
    - description: 'VM volumes in json format, replace vm volume if same name, otherwise new volume is appended. Eg [{"name": "virtiocontainerdisk", "containerDisk": {"image": "kubevirt/virtio-container-disk"}}]'
      name: volumes
      type: array
      default: []
    - description: 'Datavolume templates in json format, replace datavolume if same name, otherwise new datavolume is appended. If deleteDatavolumeTemplate is set, first datavolumes are deleted and then datavolumes from this attribute are added. Eg [{"apiVersion": "cdi.kubevirt.io/v1beta1", "kind": "DataVolume", "metadata":{"name": "test1"}, "spec": {"source": {"http": {"url": "test.somenonexisting"}}}}]'
      name: datavolumeTemplates
      type: array
      default: []
    - name: deleteDatavolumeTemplate
      description: Set to "true" or "false" if task should delete datavolume template in template and all associated volumes and disks.
      default: 'false'
      type: string
    - name: deleteVolumes
      description: Set to "true" or "false" if task should delete VM volumes. New volumes (from volumes parameter) are applied, after old volumes are deleted.
      default: 'false'
      type: string
    - name: templateParameters
      description: 'Definition of template parameters. Eg [{"description": "VM name", "name": "NAME"}]'
      default: []
      type: array
    - name: deleteTemplateParameters
      description: Set to "true" or "false" if task should delete template parameters. New parameters (from templateParameters parameter) are applied, after old parameters are deleted.
      default: 'false'
      type: string
    - name: deleteTemplate
      description: Set to `true` or `false` if task should delete the specified template. If set to 'true' the template will be deleted and all other parameters are ignored.
      default: 'false'
      type: string

  results:
    - name: name
      description: The name of a template that was updated.
    - name: namespace
      description: The namespace of a template that was updated.
  steps:
    - name: modifyvmtemplate
      image: "registry.redhat.io/container-native-virtualization/kubevirt-tekton-tasks-create-datavolume-rhel9:v4.16.0"
      command:
        - modify-vm-template
      args:
        - "--output=yaml"
        - "--template-labels"
        - $(params.templateLabels)
        - "--template-annotations"
        - $(params.templateAnnotations)
        - "--vm-labels"
        - $(params.vmLabels)
        - "--vm-annotations"
        - $(params.vmAnnotations)
        - "--disks"
        - $(params.disks)
        - "--volumes"
        - $(params.volumes)
        - "--datavolumeTemplates"
        - $(params.datavolumeTemplates)
        - "--templateParameters"
        - $(params.templateParameters)
      env:
        - name: TEMPLATE_NAME
          value: $(params.templateName)
        - name: TEMPLATE_NAMESPACE
          value: $(params.templateNamespace)
        - name: CPU_SOCKETS
          value: $(params.cpuSockets)
        - name: CPU_CORES
          value: $(params.cpuCores)
        - name: CPU_THREADS
          value: $(params.cpuThreads)
        - name: MEMORY
          value: $(params.memory)
        - name: DELETE_DATAVOLUME_TEMPLATE
          value: $(params.deleteDatavolumeTemplate)
        - name: DELETE_DISKS
          value: $(params.deleteDisks)
        - name: DELETE_VOLUMES
          value: $(params.deleteVolumes)
        - name: DELETE_TEMPLATE_PARAMETERS
          value: $(params.deleteTemplateParameters)
        - name: DELETE_TEMPLATE
          value: $(params.deleteTemplate)
